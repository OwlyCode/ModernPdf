<?php
/**
 * @category Model
 * @package  ModernPdf\Component\ContentStream
 * @author   Tristan Maindron <contact@owly-code.com>
 * @license  http://opensource.org/licenses/MIT MIT
 * @link     http://github.com/OwlyCode/ModernPdf
 */

namespace ModernPdf\Component\ContentStream;

use \ModernPdf\Component\ObjectType;

/**
 * Represents a graphic stream.
 */
class XmpMetadata extends ObjectType\PdfStream
{
    protected $graph;
    protected $resource;

    /**
     * @see Object::__construct()
     */
    public function __construct()
    {
        parent::__construct();

        \EasyRdf_Namespace::set('dc', 'http://purl.org/dc/elements/1.1/');
        \EasyRdf_Namespace::set('xmp', 'http://ns.adobe.com/xap/1.0/');
        \EasyRdf_Namespace::set('pdfaid', 'http://www.aiim.org/pdfa/ns/id/');

        $this->graph = new \EasyRdf_Graph('http://www.w3.org/1999/02/22-rdf-syntax-ns#');
        $this->resource = $this->graph->resource();
    }

    public function addMetadata($name, $value, $type = null)
    {
        switch ($type) {
            case 'rdf:Alt': // The same as rdf:Seq
            case 'rdf:Seq':
                $seq = $this->graph->newBnode('rdf:Seq');
                foreach ($value as $item) {
                    $seq->append($item);
                    $this->resource->add($name, $seq);
                }
                break;
            default:
                $this->resource->set($name, $value);
        }

        $this->push($this->graph->serialise('rdfxml'));
    }

    public function push($data)
    {
        $this->data = array(
            "<?xpacket begin='' id='W5M0MpCehiHzreSzNTczkc9d'?>",
            preg_replace('/^.+\n/', '', $data), // removes the first line generated by EasyRDF (the xml declaration)
            "<?xpacket end='w'?>"
        );
        $this->dictionary['Length'] = strlen($this->getRaw());
    }
}
